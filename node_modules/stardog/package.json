{
  "name": "stardog",
  "version": "0.1.0",
  "description": "Stardog JavaScript Framework for node.js and the browser - Develop apps using the Stardog RDF Database & JS.",
  "homepage": "http://clarkparsia.github.com/stardog.js",
  "keywords": [
    "stardog",
    "rdf",
    "sparql",
    "library",
    "semantic web",
    "linked data"
  ],
  "main": "js/stardog.js",
  "author": {
    "name": "Clark & Parsia LLC",
    "email": "inquiries@clarkparsia.com",
    "url": "http://clarkparsia.com"
  },
  "contributors": [
    {
      "name": "Edgar Rodriguez",
      "email": "edgar@clarkparsia.com"
    },
    {
      "name": "Fernando Hernandez",
      "email": "fernando@clarkparsia.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/clarkparsia/stardog.js"
  },
  "bugs": {
    "url": "https://github.com/clarkparsia/stardog.js/issues"
  },
  "dependencies": {
    "restler": "latest",
    "querystring": ">=0.1.0",
    "underscore": ">=1.4.4"
  },
  "devDependencies": {
    "request": "latest",
    "jasmine-node": ">=1.0.26"
  },
  "engines": "*",
  "scripts": {
    "test": "sh load_test_data.sh && node_modules/jasmine-node/bin/jasmine-node test/spec"
  },
  "readme": "Stardog.js\n==========\n\nLicensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)  \n_Current Version **0.1.0**_ \n\nStardog.js JavaScript Framework for node.js to develop apps with the [Stardog RDF Database](http://stardog.com).  \n\n![Stardog](http://docs.stardog.com/img/sd.png)   \n\nFor detailed documentation, see the [annotated source](http://clarkparsia.github.io/stardog.js/docs/stardog.html).\n\n## What is it? ##\n\nThis framework wraps all the functionality of a client for the Stardog DBMS, and provides access to a full set of functions such as executing SPARQL Queries, administration tasks on Stardog, and the use of the Reasoning API.\n\nAll the implementation uses the HTTP protocol, since most of Stardog functionality is available using this protocol. For more information, go to the Stardog's [Network Programming](http://stardog.com/docs/network/) documentation.\n\nThe framework is currently supported for node.js and the browser, including test cases for both environments.\nYou'll also need [npm](https://npmjs.org) and [bower](http://bower.io) to run the test cases and install the dependencies in node.js & the browser respectively.\n\n## Installation\n\nTo install stardog.js locally from the npm registry simply execute:\n\n#### In node.js\n\n    npm install stardog\n    \nThat will fetch the latest version of stardog.js in the npm registry, [more details](https://npmjs.org/package/stardog).\n    \n#### In the browser (client library using bower)\n\n    bower install stardog\n    \nThat will fetch the latest version of stardog.js in the bower registry, [more details](http://sindresorhus.com/bower-components/).\n\n## Development ##\n\nTo get started, just clone the project. You'll need a local copy of Stardog to be able to run the tests. For more information on starting the Stardog DB service and how it works, go to [Stardog's documentation](http://stardog.com/docs/), where you'll find everything you need to get up and running with Stardog.\n\nGo to [http://stardog.com](http://stardog.com), download and install the database and load the data provided in `data/` using the script in the repository. Start Stardog with the `http` port on `5823` with the following command:\n\n    $ stardog-admin server start --http 5823\n\nOnce you have Stardog running, execute the following command:\n\n    $ npm install\n    $ bower install\n\nThis will install all the dependencies using npm (for node.js) and bower (for browser), once this is done, run the test cases.\n\nAll tests should pass.\n\n### Running Tests\n\nRun all the test cases in `test/spec`. Having the Stardog server running, execute the following commands:\n\n1\\. Load the test data using the provided script:\n\n    $ ./load_test_data.sh\n\n2\\. Start the proxy via:\n\n    $ node test/testCORS.js\n\n3\\. Run the test suite:\n\n#### In the browser\n\n    open test/index.html\n\n#### In node.js\n\n    $ npm test    \n\n\n## Version details ##\n\nStardog.js depends of the Stardog HTTP API, and any change in this API will be supported by Stardog.js. Here's a list of version compatibility between __Stardog__ and  __Stardog.js__:\n\n| Stardog Version | Stardog.js Version |\n| --------------- | ------------------ |\n| <= 1.1.5        | <= 0.0.3           |\n| 1.2 - 2.0.0     | 0.0.4, 0.0.5       |\n| 2.0.0           | >= 0.1.0           |\n\n\n## Quick Example ##\n\n### node.js\n\n    var stardog = require(\"stardog\");\n     \n    var conn = new stardog.Connection();\n     \n    conn.setEndpoint(\"http://myserver:myport/\");\n    conn.setCredentials(\"username\", \"password\");\n     \n    conn.query({ \n            database: \"myDB\", \n            query: \"select distinct ?s where { ?s ?p ?o }\",  \n            limit: 10, \n            offset: 0 \n        },\n        function (data) {\n            console.log(data.results.bindings);\n    });\n    \n### Browser\n\n__NOTE__: the Endpoint is a proxy to the Stardog HTTP interface in order to avoid CORS issues (an example can be fount in `test/testCORS.js`.\n\n    <script src=\"js/stardog.js\" type=\"text/javascript\"></script>\n    â€¦\n    <script type=\"text/javascript\">\n        var conn = new Stardog.Connection();\n        conn.setEndpoint(\"/stardog\");\n        conn.setReasoning(\"QL\");\n        conn.setCredentials(\"browser\", \"secret\");\n    </script>\n\n## NOTE ##\n\nThis framework is in continuous development, please check the [issues](https://github.com/clarkparsia/stardog.js/issues) page. You're welcome to contribute.",
  "readmeFilename": "README.md",
  "_id": "stardog@0.1.0",
  "dist": {
    "shasum": "cbd8d70ce0bae00d2975fcd8d19ff661821daff6"
  },
  "_from": "stardog@",
  "_resolved": "https://registry.npmjs.org/stardog/-/stardog-0.1.0.tgz"
}
